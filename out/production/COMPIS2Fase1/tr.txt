inicio
imprimir("hola mundo");
imprimir("esta es ");
imprimir("la primera");
imprimir("prueba de todo junto");

ingresar _HOLA_ como boolean con_valor falso;
ingresar _hola_, _perez_, _ruano_ como numero con_valor 10;
ingresar _hola_  como numero con_valor 10.5;
ingresar _hola_  como numero con_valor 10;
ingresar _hola_  como cadena con_valor "hola mundo";
ingresar _hola_  como caracter con_valor 'p';
imprimir_nl(_hola_);

 _ruano_  -> 10.5 mas 6 ;
  _hola_, _perez_ -> _ruano_;
  imprimir_nl(_hola_);
  si ( _hola_ mayor 10) entonces
  si ( _hola_ mayor 10) entonces
    imprimir("si funciono");
    fin_si
    si ( _hola_ mayor 10) entonces
        imprimir("si funciono");
        fin_si
        si ( _hola_ mayor 10) entonces
            imprimir("si funciono");
            fin_si

    fin_si
si ( _hola_ mayor 10) entonces
  si ( _hola_ mayor 10) entonces
    imprimir("si funciono");
    fin_si
    si ( _hola_ mayor 10) entonces
        imprimir("si funciono");
        fin_si
        si ( _hola_ menor 10) entonces
            imprimir("si funciono");
        o_si(_hola_ mayor 10) entonces
            imprimir("si funciono el else");
         o_si(_hola_ mayor 10) entonces
                    imprimir("si funciono el else");
          o_si(_hola_ mayor 10) entonces
                     imprimir("si funciono el else");
          de_lo_contrario
            imprimir("esto no tiene que salir");
            fin_si

    fin_si
    si ( _hola_ menor 10) entonces
    imprimir("aca no tiene que pasar");
    o_si( _hola_ es_igual 100) entonces
    imprimir("aca no tiene que pasar");
    de_lo_contrario
    imprimir("si funciona el else simple jeje");
    fin_si

metodo _alberto_()
ingresar _kk_  como cadena con_valor "hola mundo";
imprimir("jalou");
retornar(_kk_);
fin_metodo

funcion _kkita_ cadena con_parametros (cadena _a_, numero _c_)
ingresar _result_ como cadena con_valor _a_ mas _c_;
retornar(_result_);
fin_funcion
imprimir(ejecutar _kkita_("alberto","hernandez"););


imprimir("regresa indentacion");
ejecutar _alberto_();
final